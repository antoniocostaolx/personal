shiny::runApp()
runApp()
library(rsconnect)
deployApp()
runApp()
runApp()
runApp()
shiny::runApp()
shinyUI(fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel(),
mainPanel(
h1("First level title"),
h2("Second level title")))))
library(shiny)
library(shiny)
shinyUI(fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel(),
mainPanel(
h1("First level title"),
h2("Second level title")))))
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
runApp()
View(bcl)
runApp()
adjust <- function(data) {
latestcpi <- last(.inflation)[[1]]
inf.latest <- time(last(.inflation))
months <- split(data)
adjust_month <- function(month) {
date <- substr(min(time(month[1]), inf.latest), 1, 7)
coredata(month) * latestcpi / .inflation[date][[1]]
}
adjs <- lapply(months, adjust_month)
adj <- do.call("rbind", adjs)
axts <- xts(adj, order.by = time(data))
axts[ , 5] <- Vo(data)
axts
}
runApp()
install.packages("quantmod")
runApp()
View(adjust)
yahoo finance data
CPIAUCNS
runApp()
runApp()
runApp()
install.packages("shinydashboard")
runApp()
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
